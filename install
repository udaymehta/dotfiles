#!/bin/env bash

clear

echo "$(tput setaf 1) [*] Welcome! $(tput setaf 7)"
echo "$(tput setaf 2) Let's start with what you want to install ('Ctrl+C' to stop the script) $(tput setaf 7)"
echo
read -p "$(tput setaf 3) 1. Install XOrg? (y/n) $(tput setaf 7) :: " xorgResp
read -p "$(tput setaf 3) 2. Install Yay? (y/n) $(tput setaf 7) :: " yayResp
read -p "$(tput setaf 3) 3. Install Snap Store? (y/n) $(tput setaf 7) :: " snapStore
read -p "$(tput setaf 3) 4. Install Docker? (y/n) $(tput setaf 7) :: " dockerResp
read -p "$(tput setaf 3) 5. Install WM and deafult settings? (y/n) $(tput setaf 7) :: " wmResp
read -p "$(tput setaf 3) 6. Install Fonts? (y/n) $(tput setaf 7) :: " fontResp
read -p "$(tput setaf 3) 7. Install Overdrive Downloader? (y/n) $(tput setaf 7) :: " overdriveResp
read -p "$(tput setaf 3) 8. Install Your Default Packages? (y/n) $(tput setaf 7) :: " othPkg
read -p "$(tput setaf 3) 9. Do you want to install JetBrains CLion [y/n] " clionResp

clear
echo "$(tput setaf 3) [*] Checking for system update... if available. $(tput setaf 7)"
sudo pacman -Syu --noconfirm

install_xorg() {
    if [[ $xorgResp -eq "y" || $xorgResp -eq "" ]]; then
        sudo pacman -Sy --noconfirm --needed xorg xorg-xinit xorg-xinput xorg-xbacklight xorg-xrandr man
    elif [[ $xorgResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Xorg $(tput setaf 7)"
    else
        continue
    fi
}
install_xorg


install_font() {
    if [[ $fontResp = "y" || $fontResp = "" ]]; then
        mkdir -p  ~/.local/share/fonts
        cp -r ./.local/share/fonts/* ~/.local/share/fonts
        fc-cache -vf
    elif [[ $fontResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Font $(tput setaf 7)"
    else
        continue
    fi
}
install_font


install_yay() {
    if [[ $yayResp = "y" || $yayResp = "" ]]; then
        mkdir ~/.helper
        git clone https://aur.archlinux.org/yay.git ~/.helper/yay
        (cd ~/.helper/yay/ && makepkg -si)
    elif [[ $yayResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Yay $(tput setaf 7)"
    else
        continue
    fi
}
install_yay



install_overdriveDownloader() {
    if [[ $overdriveResp = "y" || $overdriveResp = "" ]]; then
        sudo pacman -S curl util-linux libxml2 openssl coreutils tidy
        mkdir -p ~/.local/bin
        curl https://chbrown.github.io/overdrive/overdrive.sh -o ~/.local/bin/overdrive
        chmod +x ~/.local/bin/overdrive
        sleep 2
        printf 'export PATH=~/.local/bin:$PATH\n' >> ~/.bashrc
        source ~/.bashrc
    elif [[ $overdriveResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing OverdriveDownloader $(tput setaf 7)"
    else
        continue
    fi
}
install_overdriveDownloader


install_docker() {
    if [[ $dockerResp = "y" || $dockerResp = "" ]]; then
        sudo pacman -S docker
        systemctl start docker.service
        systemctl enable docker.service && groupadd docker && gpasswd -a $(whoami) docker
    elif [[ $dockerResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Docker $(tput setaf 7)"
    else
        continue
    fi  
}
install_docker


install_snapStore() {
    if [[ $snapStore = "y" || $snapStore = "" ]]; then
        mkdir -p ~/Sources
        git clone https://aur.archlinux.org/snapd.git ~/Sorces/snapd
        (cd ~/Sorces/snapd/ && makepkg -si)
        sudo systemctl enable --now snapd.socket
        sudo ln -s /var/lib/snapd/snap /snap
    elif [[ $snapStore -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Snap Store $(tput setaf 7)"
    else
        continue
    fi
}
install_snapStore


install_otherPackages() {
	if [[ $othPkg = "y" || $othPkg = "" ]]; then
		yay -Syu firefox brave-bin visual-studio-code-bin telegram-desktop-bin discord scrcpy network-manager-applet arandr lxappearance-gtk3 polkit-gnome acpi sysstat pavucontrol scrot materia-gtk-theme papirus-icon-theme pulseaudio bluez-utils netctl htop neofetch tldr obs-studio qbittorrent protonvpn p7zip alacarte blueman chrome-gnome-shell gnome-keyring seahorse picom-ibhagwan-git

		sudo pacman -Syu bash-completion cronie android-tools android-file-transfer faad2 flac jasper lame libdca libdv libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore vlc
	elif [[ $othPkg -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing Other Packages $(tput setaf 7)"
    else
        continue
    fi

}
install_otherPackages



install_windowManagerfiles() {
    if [[ $wmResp = "y" || $wmResp = "" ]]; then
        sudo pacman -S awesome xfce4-power-manager rofi xclip feh alacritty dunst
        gsettings set org.gnome.desktop.background picture-uri "file://$(pwd)/wallpapers/room.png"
        sh -c "$(curl -fsSL https://starship.rs/install.sh)"
        echo -e 'eval "$(starship init bash)"' > ~/.bashrc 
    elif [[ $xorgResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not instaling WM settings $(tput setaf 7)"
    else
        continue
    fi
}
install_windowManagerfiles



set_githubSettings() {
    git config --global user.name "udaymehta"
    git config --global user.email "udaymehta.1011@gmail.com"
    git config --global core.editor code
    git config --global init.defaultBranch main
}
set_githubSettings



install_clion() {
    if [[ $clionResp = "y" || $clionResp = "" ]]; then
        sudo yay -S clion
    elif [[ $clionResp -eq "n" ]]; then
        echo "$(tput setaf 3) [*] Not installing JetBrains CLion $(tput setaf 7)"
    else
        continue
    fi
}
install_clion


echo "$(tput setaf 2) [**] INSTALLATION COMPLETED SUCCESSFULLY!!! $(tput setaf 7)"
